ARM GAS  /tmp/cct0e1Xl.s 			page 1


   1              		.cpu cortex-m0
   2              		.arch armv6s-m
   3              		.fpu softvfp
   4              		.eabi_attribute 20, 1
   5              		.eabi_attribute 21, 1
   6              		.eabi_attribute 23, 3
   7              		.eabi_attribute 24, 1
   8              		.eabi_attribute 25, 1
   9              		.eabi_attribute 26, 1
  10              		.eabi_attribute 30, 1
  11              		.eabi_attribute 34, 0
  12              		.eabi_attribute 18, 4
  13              		.file	"sysmem.c"
  14              		.text
  15              	.Ltext0:
  16              		.cfi_sections	.debug_frame
  17              		.file 1 "sysmem.c"
  18              		.section	.text._sbrk,"ax",%progbits
  19              		.align	1
  20              		.global	_sbrk
  21              		.syntax unified
  22              		.code	16
  23              		.thumb_func
  25              	_sbrk:
  26              	.LVL0:
  27              	.LFB0:
   1:sysmem.c      **** /**
   2:sysmem.c      ****  ******************************************************************************
   3:sysmem.c      ****  * @file      sysmem.c
   4:sysmem.c      ****  * @author    Generated by STM32CubeMX
   5:sysmem.c      ****  * @brief     System Memory calls file
   6:sysmem.c      ****  *
   7:sysmem.c      ****  *            For more information about which C functions
   8:sysmem.c      ****  *            need which of these lowlevel functions
   9:sysmem.c      ****  *            please consult the newlib libc manual
  10:sysmem.c      ****  ******************************************************************************
  11:sysmem.c      ****  * @attention
  12:sysmem.c      ****  *
  13:sysmem.c      ****  * Copyright (c) 2024 STMicroelectronics.
  14:sysmem.c      ****  * All rights reserved.
  15:sysmem.c      ****  *
  16:sysmem.c      ****  * This software is licensed under terms that can be found in the LICENSE file
  17:sysmem.c      ****  * in the root directory of this software component.
  18:sysmem.c      ****  * If no LICENSE file comes with this software, it is provided AS-IS.
  19:sysmem.c      ****  *
  20:sysmem.c      ****  ******************************************************************************
  21:sysmem.c      ****  */
  22:sysmem.c      **** 
  23:sysmem.c      **** /* Includes */
  24:sysmem.c      **** #include <errno.h>
  25:sysmem.c      **** #include <stdint.h>
  26:sysmem.c      **** 
  27:sysmem.c      **** /**
  28:sysmem.c      ****  * Pointer to the current high watermark of the heap usage
  29:sysmem.c      ****  */
  30:sysmem.c      **** static uint8_t *__sbrk_heap_end = NULL;
  31:sysmem.c      **** 
ARM GAS  /tmp/cct0e1Xl.s 			page 2


  32:sysmem.c      **** /**
  33:sysmem.c      ****  * @brief _sbrk() allocates memory to the newlib heap and is used by malloc
  34:sysmem.c      ****  *        and others from the C library
  35:sysmem.c      ****  *
  36:sysmem.c      ****  * @verbatim
  37:sysmem.c      ****  * ############################################################################
  38:sysmem.c      ****  * #  .data  #  .bss  #       newlib heap       #          MSP stack          #
  39:sysmem.c      ****  * #         #        #                         # Reserved by _Min_Stack_Size #
  40:sysmem.c      ****  * ############################################################################
  41:sysmem.c      ****  * ^-- RAM start      ^-- _end                             _estack, RAM end --^
  42:sysmem.c      ****  * @endverbatim
  43:sysmem.c      ****  *
  44:sysmem.c      ****  * This implementation starts allocating at the '_end' linker symbol
  45:sysmem.c      ****  * The '_Min_Stack_Size' linker symbol reserves a memory for the MSP stack
  46:sysmem.c      ****  * The implementation considers '_estack' linker symbol to be RAM end
  47:sysmem.c      ****  * NOTE: If the MSP stack, at any point during execution, grows larger than the
  48:sysmem.c      ****  * reserved size, please increase the '_Min_Stack_Size'.
  49:sysmem.c      ****  *
  50:sysmem.c      ****  * @param incr Memory size
  51:sysmem.c      ****  * @return Pointer to allocated memory
  52:sysmem.c      ****  */
  53:sysmem.c      **** void *_sbrk(ptrdiff_t incr)
  54:sysmem.c      **** {
  28              		.loc 1 54 1 view -0
  29              		.cfi_startproc
  30              		@ args = 0, pretend = 0, frame = 0
  31              		@ frame_needed = 0, uses_anonymous_args = 0
  32              		.loc 1 54 1 is_stmt 0 view .LVU1
  33 0000 10B5     		push	{r4, lr}
  34              	.LCFI0:
  35              		.cfi_def_cfa_offset 8
  36              		.cfi_offset 4, -8
  37              		.cfi_offset 14, -4
  38 0002 0300     		movs	r3, r0
  55:sysmem.c      ****   extern uint8_t _end; /* Symbol defined in the linker script */
  39              		.loc 1 55 3 is_stmt 1 view .LVU2
  56:sysmem.c      ****   extern uint8_t _estack; /* Symbol defined in the linker script */
  40              		.loc 1 56 3 view .LVU3
  57:sysmem.c      ****   extern uint32_t _Min_Stack_Size; /* Symbol defined in the linker script */
  41              		.loc 1 57 3 view .LVU4
  58:sysmem.c      ****   const uint32_t stack_limit = (uint32_t)&_estack - (uint32_t)&_Min_Stack_Size;
  42              		.loc 1 58 3 view .LVU5
  43              		.loc 1 58 32 is_stmt 0 view .LVU6
  44 0004 0C4A     		ldr	r2, .L7
  45              		.loc 1 58 53 view .LVU7
  46 0006 0D49     		ldr	r1, .L7+4
  59:sysmem.c      ****   const uint8_t *max_heap = (uint8_t *)stack_limit;
  47              		.loc 1 59 3 is_stmt 1 view .LVU8
  58:sysmem.c      ****   const uint32_t stack_limit = (uint32_t)&_estack - (uint32_t)&_Min_Stack_Size;
  48              		.loc 1 58 51 is_stmt 0 view .LVU9
  49 0008 521A     		subs	r2, r2, r1
  50              	.LVL1:
  60:sysmem.c      ****   uint8_t *prev_heap_end;
  51              		.loc 1 60 3 is_stmt 1 view .LVU10
  61:sysmem.c      **** 
  62:sysmem.c      ****   /* Initialize heap end at first call */
  63:sysmem.c      ****   if (NULL == __sbrk_heap_end)
ARM GAS  /tmp/cct0e1Xl.s 			page 3


  52              		.loc 1 63 3 view .LVU11
  53              		.loc 1 63 12 is_stmt 0 view .LVU12
  54 000a 0D49     		ldr	r1, .L7+8
  55 000c 0968     		ldr	r1, [r1]
  56              		.loc 1 63 6 view .LVU13
  57 000e 0029     		cmp	r1, #0
  58 0010 07D0     		beq	.L5
  59              	.LVL2:
  60              	.L2:
  64:sysmem.c      ****   {
  65:sysmem.c      ****     __sbrk_heap_end = &_end;
  66:sysmem.c      ****   }
  67:sysmem.c      **** 
  68:sysmem.c      ****   /* Protect heap from growing into the reserved MSP stack */
  69:sysmem.c      ****   if (__sbrk_heap_end + incr > max_heap)
  61              		.loc 1 69 3 is_stmt 1 view .LVU14
  62              		.loc 1 69 23 is_stmt 0 view .LVU15
  63 0012 0B49     		ldr	r1, .L7+8
  64 0014 0868     		ldr	r0, [r1]
  65 0016 C318     		adds	r3, r0, r3
  66              	.LVL3:
  67              		.loc 1 69 6 view .LVU16
  68 0018 9342     		cmp	r3, r2
  69 001a 06D8     		bhi	.L6
  70:sysmem.c      ****   {
  71:sysmem.c      ****     errno = ENOMEM;
  72:sysmem.c      ****     return (void *)-1;
  73:sysmem.c      ****   }
  74:sysmem.c      **** 
  75:sysmem.c      ****   prev_heap_end = __sbrk_heap_end;
  70              		.loc 1 75 3 is_stmt 1 view .LVU17
  71              	.LVL4:
  76:sysmem.c      ****   __sbrk_heap_end += incr;
  72              		.loc 1 76 3 view .LVU18
  73              		.loc 1 76 19 is_stmt 0 view .LVU19
  74 001c 084A     		ldr	r2, .L7+8
  75              	.LVL5:
  76              		.loc 1 76 19 view .LVU20
  77 001e 1360     		str	r3, [r2]
  77:sysmem.c      **** 
  78:sysmem.c      ****   return (void *)prev_heap_end;
  78              		.loc 1 78 3 is_stmt 1 view .LVU21
  79              	.LVL6:
  80              	.L1:
  79:sysmem.c      **** }
  81              		.loc 1 79 1 is_stmt 0 view .LVU22
  82              		@ sp needed
  83 0020 10BD     		pop	{r4, pc}
  84              	.LVL7:
  85              	.L5:
  65:sysmem.c      ****   }
  86              		.loc 1 65 5 is_stmt 1 view .LVU23
  65:sysmem.c      ****   }
  87              		.loc 1 65 21 is_stmt 0 view .LVU24
  88 0022 0749     		ldr	r1, .L7+8
  89 0024 0748     		ldr	r0, .L7+12
  90              	.LVL8:
ARM GAS  /tmp/cct0e1Xl.s 			page 4


  65:sysmem.c      ****   }
  91              		.loc 1 65 21 view .LVU25
  92 0026 0860     		str	r0, [r1]
  93 0028 F3E7     		b	.L2
  94              	.LVL9:
  95              	.L6:
  71:sysmem.c      ****     return (void *)-1;
  96              		.loc 1 71 5 is_stmt 1 view .LVU26
  97 002a FFF7FEFF 		bl	__errno
  98              	.LVL10:
  71:sysmem.c      ****     return (void *)-1;
  99              		.loc 1 71 11 is_stmt 0 discriminator 1 view .LVU27
 100 002e 0C23     		movs	r3, #12
 101 0030 0360     		str	r3, [r0]
  72:sysmem.c      ****   }
 102              		.loc 1 72 5 is_stmt 1 view .LVU28
  72:sysmem.c      ****   }
 103              		.loc 1 72 12 is_stmt 0 view .LVU29
 104 0032 0120     		movs	r0, #1
 105 0034 4042     		rsbs	r0, r0, #0
 106 0036 F3E7     		b	.L1
 107              	.L8:
 108              		.align	2
 109              	.L7:
 110 0038 00000000 		.word	_estack
 111 003c 00000000 		.word	_Min_Stack_Size
 112 0040 00000000 		.word	__sbrk_heap_end
 113 0044 00000000 		.word	_end
 114              		.cfi_endproc
 115              	.LFE0:
 117              		.section	.bss.__sbrk_heap_end,"aw",%nobits
 118              		.align	2
 121              	__sbrk_heap_end:
 122 0000 00000000 		.space	4
 123              		.text
 124              	.Letext0:
 125              		.file 2 "/home/kaylee/.arduino15/packages/STMicroelectronics/tools/xpack-arm-none-eabi-gcc/13.2.1-
 126              		.file 3 "/home/kaylee/.arduino15/packages/STMicroelectronics/tools/xpack-arm-none-eabi-gcc/13.2.1-
 127              		.file 4 "/home/kaylee/.arduino15/packages/STMicroelectronics/tools/xpack-arm-none-eabi-gcc/13.2.1-
 128              		.file 5 "/home/kaylee/.arduino15/packages/STMicroelectronics/tools/xpack-arm-none-eabi-gcc/13.2.1-
ARM GAS  /tmp/cct0e1Xl.s 			page 5


DEFINED SYMBOLS
                            *ABS*:00000000 sysmem.c
     /tmp/cct0e1Xl.s:19     .text._sbrk:00000000 $t
     /tmp/cct0e1Xl.s:25     .text._sbrk:00000000 _sbrk
     /tmp/cct0e1Xl.s:110    .text._sbrk:00000038 $d
     /tmp/cct0e1Xl.s:121    .bss.__sbrk_heap_end:00000000 __sbrk_heap_end
     /tmp/cct0e1Xl.s:118    .bss.__sbrk_heap_end:00000000 $d

UNDEFINED SYMBOLS
__errno
_estack
_Min_Stack_Size
_end
