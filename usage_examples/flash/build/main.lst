ARM GAS  /tmp/ccPYuakx.s 			page 1


   1              		.cpu cortex-m0
   2              		.arch armv6s-m
   3              		.fpu softvfp
   4              		.eabi_attribute 20, 1
   5              		.eabi_attribute 21, 1
   6              		.eabi_attribute 23, 3
   7              		.eabi_attribute 24, 1
   8              		.eabi_attribute 25, 1
   9              		.eabi_attribute 26, 1
  10              		.eabi_attribute 30, 1
  11              		.eabi_attribute 34, 0
  12              		.eabi_attribute 18, 4
  13              		.file	"main.c"
  14              		.text
  15              	.Ltext0:
  16              		.cfi_sections	.debug_frame
  17              		.file 1 "main.c"
  18              		.section	.text.SystemInit,"ax",%progbits
  19              		.align	1
  20              		.global	SystemInit
  21              		.syntax unified
  22              		.code	16
  23              		.thumb_func
  25              	SystemInit:
  26              	.LFB3:
   1:main.c        **** #include <stdlib.h>
   2:main.c        **** #include <stdio.h>
   3:main.c        **** #include <stdint.h>
   4:main.c        **** #include "handyarm.h"
   5:main.c        **** 
   6:main.c        **** // Flash programmer base address (assuming it's mapped here, adjust as needed)
   7:main.c        **** #define FLASH_PROG_BASE (0xE1000000)
   8:main.c        **** 
   9:main.c        **** // Control register bits
  10:main.c        **** #define FLASH_CTRL_WRITE_ENABLE    (1 << 0)
  11:main.c        **** #define FLASH_CTRL_AUTO_INCREMENT  (1 << 1)
  12:main.c        **** 
  13:main.c        **** 
  14:main.c        **** void SystemInit(void) {
  27              		.loc 1 14 23 view -0
  28              		.cfi_startproc
  29              		@ args = 0, pretend = 0, frame = 0
  30              		@ frame_needed = 0, uses_anonymous_args = 0
  31              		@ link register save eliminated.
  15:main.c        **** 
  16:main.c        **** }
  32              		.loc 1 16 1 view .LVU1
  33              		@ sp needed
  34 0000 7047     		bx	lr
  35              		.cfi_endproc
  36              	.LFE3:
  38              		.section	.text.flash_init,"ax",%progbits
  39              		.align	1
  40              		.global	flash_init
  41              		.syntax unified
  42              		.code	16
  43              		.thumb_func
ARM GAS  /tmp/ccPYuakx.s 			page 2


  45              	flash_init:
  46              	.LFB4:
  17:main.c        **** 
  18:main.c        **** // Example flash programming functions
  19:main.c        **** void flash_init(void) {
  47              		.loc 1 19 23 view -0
  48              		.cfi_startproc
  49              		@ args = 0, pretend = 0, frame = 0
  50              		@ frame_needed = 0, uses_anonymous_args = 0
  51              		@ link register save eliminated.
  20:main.c        ****    // Initialize flash programmer with write disabled
  21:main.c        ****    HandyARM_FlashProg(FLASH_PROG_BASE)->control = 0;
  52              		.loc 1 21 4 view .LVU3
  53              		.loc 1 21 49 is_stmt 0 view .LVU4
  54 0000 E123     		movs	r3, #225
  55 0002 1B06     		lsls	r3, r3, #24
  56 0004 0022     		movs	r2, #0
  57 0006 1A60     		str	r2, [r3]
  22:main.c        **** }
  58              		.loc 1 22 1 view .LVU5
  59              		@ sp needed
  60 0008 7047     		bx	lr
  61              		.cfi_endproc
  62              	.LFE4:
  64              		.section	.text.flash_enable_write,"ax",%progbits
  65              		.align	1
  66              		.global	flash_enable_write
  67              		.syntax unified
  68              		.code	16
  69              		.thumb_func
  71              	flash_enable_write:
  72              	.LFB5:
  23:main.c        **** 
  24:main.c        **** void flash_enable_write(void) {
  73              		.loc 1 24 31 is_stmt 1 view -0
  74              		.cfi_startproc
  75              		@ args = 0, pretend = 0, frame = 0
  76              		@ frame_needed = 0, uses_anonymous_args = 0
  77              		@ link register save eliminated.
  25:main.c        ****    // Enable write and auto-increment
  26:main.c        ****    HandyARM_FlashProg(FLASH_PROG_BASE)->control = FLASH_CTRL_WRITE_ENABLE | FLASH_CTRL_AUTO_INCREME
  78              		.loc 1 26 4 view .LVU7
  79              		.loc 1 26 49 is_stmt 0 view .LVU8
  80 0000 E123     		movs	r3, #225
  81 0002 1B06     		lsls	r3, r3, #24
  82 0004 0322     		movs	r2, #3
  83 0006 1A60     		str	r2, [r3]
  27:main.c        **** }
  84              		.loc 1 27 1 view .LVU9
  85              		@ sp needed
  86 0008 7047     		bx	lr
  87              		.cfi_endproc
  88              	.LFE5:
  90              		.section	.text.flash_disable_write,"ax",%progbits
  91              		.align	1
  92              		.global	flash_disable_write
  93              		.syntax unified
ARM GAS  /tmp/ccPYuakx.s 			page 3


  94              		.code	16
  95              		.thumb_func
  97              	flash_disable_write:
  98              	.LFB6:
  28:main.c        **** 
  29:main.c        **** void flash_disable_write(void) {
  99              		.loc 1 29 32 is_stmt 1 view -0
 100              		.cfi_startproc
 101              		@ args = 0, pretend = 0, frame = 0
 102              		@ frame_needed = 0, uses_anonymous_args = 0
 103              		@ link register save eliminated.
  30:main.c        ****    // Disable write
  31:main.c        ****    HandyARM_FlashProg(FLASH_PROG_BASE)->control = 0;
 104              		.loc 1 31 4 view .LVU11
 105              		.loc 1 31 49 is_stmt 0 view .LVU12
 106 0000 E123     		movs	r3, #225
 107 0002 1B06     		lsls	r3, r3, #24
 108 0004 0022     		movs	r2, #0
 109 0006 1A60     		str	r2, [r3]
  32:main.c        **** }
 110              		.loc 1 32 1 view .LVU13
 111              		@ sp needed
 112 0008 7047     		bx	lr
 113              		.cfi_endproc
 114              	.LFE6:
 116              		.section	.text.flash_erase_page,"ax",%progbits
 117              		.align	1
 118              		.global	flash_erase_page
 119              		.syntax unified
 120              		.code	16
 121              		.thumb_func
 123              	flash_erase_page:
 124              	.LVL0:
 125              	.LFB7:
  33:main.c        **** 
  34:main.c        **** void flash_erase_page(uint32_t page_number) {
 126              		.loc 1 34 45 is_stmt 1 view -0
 127              		.cfi_startproc
 128              		@ args = 0, pretend = 0, frame = 0
 129              		@ frame_needed = 0, uses_anonymous_args = 0
 130              		@ link register save eliminated.
  35:main.c        ****    // Erase a page of flash
  36:main.c        ****    HandyARM_FlashProg(FLASH_PROG_BASE)->erase_page = page_number;
 131              		.loc 1 36 4 view .LVU15
 132              		.loc 1 36 52 is_stmt 0 view .LVU16
 133 0000 E123     		movs	r3, #225
 134 0002 1B06     		lsls	r3, r3, #24
 135 0004 1862     		str	r0, [r3, #32]
  37:main.c        **** }
 136              		.loc 1 37 1 view .LVU17
 137              		@ sp needed
 138 0006 7047     		bx	lr
 139              		.cfi_endproc
 140              	.LFE7:
 142              		.section	.text.flash_write_word,"ax",%progbits
 143              		.align	1
 144              		.global	flash_write_word
ARM GAS  /tmp/ccPYuakx.s 			page 4


 145              		.syntax unified
 146              		.code	16
 147              		.thumb_func
 149              	flash_write_word:
 150              	.LVL1:
 151              	.LFB8:
  38:main.c        **** 
  39:main.c        **** void flash_write_word(uint32_t offset, uint32_t value) {
 152              		.loc 1 39 56 is_stmt 1 view -0
 153              		.cfi_startproc
 154              		@ args = 0, pretend = 0, frame = 0
 155              		@ frame_needed = 0, uses_anonymous_args = 0
 156              		@ link register save eliminated.
  40:main.c        ****    // Set the offset
  41:main.c        ****    HandyARM_FlashProg(FLASH_PROG_BASE)->offset = offset;
 157              		.loc 1 41 4 view .LVU19
 158              		.loc 1 41 48 is_stmt 0 view .LVU20
 159 0000 E123     		movs	r3, #225
 160 0002 1B06     		lsls	r3, r3, #24
 161 0004 5860     		str	r0, [r3, #4]
  42:main.c        ****    // Write the value
  43:main.c        ****    HandyARM_FlashProg(FLASH_PROG_BASE)->value = value;
 162              		.loc 1 43 4 is_stmt 1 view .LVU21
 163              		.loc 1 43 47 is_stmt 0 view .LVU22
 164 0006 9960     		str	r1, [r3, #8]
  44:main.c        **** }
 165              		.loc 1 44 1 view .LVU23
 166              		@ sp needed
 167 0008 7047     		bx	lr
 168              		.cfi_endproc
 169              	.LFE8:
 171              		.section	.rodata.main.str1.4,"aMS",%progbits,1
 172              		.align	2
 173              	.LC0:
 174 0000 466C6173 		.ascii	"Flash Programming Example\000"
 174      68205072 
 174      6F677261 
 174      6D6D696E 
 174      67204578 
 175 001a 0000     		.align	2
 176              	.LC2:
 177 001c 57726974 		.ascii	"Writing pattern to flash...\000"
 177      696E6720 
 177      70617474 
 177      65726E20 
 177      746F2066 
 178              		.align	2
 179              	.LC4:
 180 0038 466C6173 		.ascii	"Flash programming complete\000"
 180      68207072 
 180      6F677261 
 180      6D6D696E 
 180      6720636F 
 181 0053 00       		.align	2
 182              	.LC6:
 183 0054 56657269 		.ascii	"Verifying written data...\000"
 183      6679696E 
ARM GAS  /tmp/ccPYuakx.s 			page 5


 183      67207772 
 183      69747465 
 183      6E206461 
 184 006e 0000     		.align	2
 185              	.LC8:
 186 0070 4572726F 		.ascii	"Error at offset 0x%lx: expected 0x%lx, got 0x%lx\012"
 186      72206174 
 186      206F6666 
 186      73657420 
 186      3078256C 
 187 00a1 00       		.ascii	"\000"
 188 00a2 0000     		.align	2
 189              	.LC10:
 190 00a4 44617461 		.ascii	"Data verification successful: All values match expe"
 190      20766572 
 190      69666963 
 190      6174696F 
 190      6E207375 
 191 00d7 63746564 		.ascii	"cted patterns.\000"
 191      20706174 
 191      7465726E 
 191      732E00
 192 00e6 0000     		.align	2
 193              	.LC12:
 194 00e8 44617461 		.ascii	"Data verification failed: %d errors found.\012\000"
 194      20766572 
 194      69666963 
 194      6174696F 
 194      6E206661 
 195              		.section	.text.main,"ax",%progbits
 196              		.align	1
 197              		.global	main
 198              		.syntax unified
 199              		.code	16
 200              		.thumb_func
 202              	main:
 203              	.LFB9:
  45:main.c        **** 
  46:main.c        **** // Example usage
  47:main.c        **** int main(void) {
 204              		.loc 1 47 16 is_stmt 1 view -0
 205              		.cfi_startproc
 206              		@ args = 0, pretend = 0, frame = 0
 207              		@ frame_needed = 0, uses_anonymous_args = 0
 208 0000 70B5     		push	{r4, r5, r6, lr}
 209              	.LCFI0:
 210              		.cfi_def_cfa_offset 16
 211              		.cfi_offset 4, -16
 212              		.cfi_offset 5, -12
 213              		.cfi_offset 6, -8
 214              		.cfi_offset 14, -4
  48:main.c        ****    printf("Flash Programming Example\n");
 215              		.loc 1 48 4 view .LVU25
 216 0002 2048     		ldr	r0, .L16
 217 0004 FFF7FEFF 		bl	puts
 218              	.LVL2:
  49:main.c        **** 
ARM GAS  /tmp/ccPYuakx.s 			page 6


  50:main.c        ****    // Initialize flash
  51:main.c        ****    flash_init();
 219              		.loc 1 51 4 view .LVU26
 220 0008 FFF7FEFF 		bl	flash_init
 221              	.LVL3:
  52:main.c        **** 
  53:main.c        ****    // Enable writing
  54:main.c        ****    flash_enable_write();
 222              		.loc 1 54 4 view .LVU27
 223 000c FFF7FEFF 		bl	flash_enable_write
 224              	.LVL4:
  55:main.c        **** 
  56:main.c        ****    // Erase page 0
  57:main.c        **** //   printf("Erasing page 0...\n");
  58:main.c        **** //   flash_erase_page(0);
  59:main.c        **** 
  60:main.c        ****    // Write a pattern to flash
  61:main.c        ****    printf("Writing pattern to flash...\n");
 225              		.loc 1 61 4 view .LVU28
 226 0010 1D48     		ldr	r0, .L16+4
 227 0012 FFF7FEFF 		bl	puts
 228              	.LVL5:
  62:main.c        ****    for (uint32_t i = 0x10000; i < 0x10400; i+=4) {
 229              		.loc 1 62 4 view .LVU29
 230              	.LBB2:
 231              		.loc 1 62 9 view .LVU30
 232              		.loc 1 62 18 is_stmt 0 view .LVU31
 233 0016 8024     		movs	r4, #128
 234 0018 6402     		lsls	r4, r4, #9
 235              		.loc 1 62 4 view .LVU32
 236 001a 05E0     		b	.L8
 237              	.LVL6:
 238              	.L9:
  63:main.c        ****       flash_write_word(i , 0xDEADBEEF + i);
 239              		.loc 1 63 7 is_stmt 1 view .LVU33
 240 001c 1B4B     		ldr	r3, .L16+8
 241 001e E118     		adds	r1, r4, r3
 242 0020 2000     		movs	r0, r4
 243 0022 FFF7FEFF 		bl	flash_write_word
 244              	.LVL7:
  62:main.c        ****    for (uint32_t i = 0x10000; i < 0x10400; i+=4) {
 245              		.loc 1 62 45 discriminator 3 view .LVU34
 246 0026 0434     		adds	r4, r4, #4
 247              	.LVL8:
 248              	.L8:
  62:main.c        ****    for (uint32_t i = 0x10000; i < 0x10400; i+=4) {
 249              		.loc 1 62 33 discriminator 1 view .LVU35
 250 0028 8223     		movs	r3, #130
 251 002a 5B02     		lsls	r3, r3, #9
 252 002c 9C42     		cmp	r4, r3
 253 002e F5D3     		bcc	.L9
 254              	.LBE2:
  64:main.c        ****    }
  65:main.c        **** 
  66:main.c        ****    // Disable writing when done
  67:main.c        ****    flash_disable_write();
 255              		.loc 1 67 4 view .LVU36
ARM GAS  /tmp/ccPYuakx.s 			page 7


 256 0030 FFF7FEFF 		bl	flash_disable_write
 257              	.LVL9:
  68:main.c        **** 
  69:main.c        ****    printf("Flash programming complete\n");
 258              		.loc 1 69 4 view .LVU37
 259 0034 1648     		ldr	r0, .L16+12
 260 0036 FFF7FEFF 		bl	puts
 261              	.LVL10:
  70:main.c        **** 
  71:main.c        **** // Confirm the write put the correct data at 0x10000 (absolute address in RAM)
  72:main.c        ****    printf("Verifying written data...\n");
 262              		.loc 1 72 4 view .LVU38
 263 003a 1648     		ldr	r0, .L16+16
 264 003c FFF7FEFF 		bl	puts
 265              	.LVL11:
  73:main.c        ****    uint8_t *flash_memory = (uint8_t *) 0x10000; // Pointer to the flash memory region
 266              		.loc 1 73 4 view .LVU39
  74:main.c        ****    int errors = 0;
 267              		.loc 1 74 4 view .LVU40
  75:main.c        **** 
  76:main.c        ****    for (uint32_t i = 0; i < 400; i+=4) {
 268              		.loc 1 76 4 view .LVU41
 269              	.LBB3:
 270              		.loc 1 76 9 view .LVU42
 271              		.loc 1 76 18 is_stmt 0 view .LVU43
 272 0040 0024     		movs	r4, #0
 273              	.LVL12:
 274              		.loc 1 76 18 view .LVU44
 275              	.LBE3:
  74:main.c        ****    int errors = 0;
 276              		.loc 1 74 8 view .LVU45
 277 0042 0025     		movs	r5, #0
 278              	.LBB5:
 279              		.loc 1 76 4 view .LVU46
 280 0044 00E0     		b	.L10
 281              	.LVL13:
 282              	.L11:
 283              		.loc 1 76 35 is_stmt 1 discriminator 2 view .LVU47
 284 0046 0434     		adds	r4, r4, #4
 285              	.LVL14:
 286              	.L10:
 287              		.loc 1 76 27 discriminator 1 view .LVU48
 288 0048 C823     		movs	r3, #200
 289 004a 5B00     		lsls	r3, r3, #1
 290 004c 9C42     		cmp	r4, r3
 291 004e 0DD2     		bcs	.L15
 292              	.LBB4:
  77:main.c        ****       uint32_t expected = 0xDEADBEEF + i + 0x10000;
 293              		.loc 1 77 7 view .LVU49
 294              		.loc 1 77 16 is_stmt 0 view .LVU50
 295 0050 114B     		ldr	r3, .L16+20
 296 0052 E218     		adds	r2, r4, r3
 297              	.LVL15:
  78:main.c        ****       uint32_t actual = *((uint32_t * )(flash_memory + i));
 298              		.loc 1 78 7 is_stmt 1 view .LVU51
 299              		.loc 1 78 54 is_stmt 0 view .LVU52
 300 0054 8023     		movs	r3, #128
ARM GAS  /tmp/ccPYuakx.s 			page 8


 301 0056 5B02     		lsls	r3, r3, #9
 302 0058 E318     		adds	r3, r4, r3
 303              		.loc 1 78 16 view .LVU53
 304 005a 1B68     		ldr	r3, [r3]
 305              	.LVL16:
  79:main.c        **** 
  80:main.c        ****       if (actual != expected) {
 306              		.loc 1 80 7 is_stmt 1 view .LVU54
 307              		.loc 1 80 10 is_stmt 0 view .LVU55
 308 005c 9A42     		cmp	r2, r3
 309 005e F2D0     		beq	.L11
  81:main.c        ****          printf("Error at offset 0x%lx: expected 0x%lx, got 0x%lx\n", i, expected, actual);
 310              		.loc 1 81 10 is_stmt 1 view .LVU56
 311 0060 0E48     		ldr	r0, .L16+24
 312 0062 2100     		movs	r1, r4
 313 0064 FFF7FEFF 		bl	printf
 314              	.LVL17:
  82:main.c        ****          errors++;
 315              		.loc 1 82 10 view .LVU57
 316              		.loc 1 82 16 is_stmt 0 view .LVU58
 317 0068 0135     		adds	r5, r5, #1
 318              	.LVL18:
 319              		.loc 1 82 16 view .LVU59
 320 006a ECE7     		b	.L11
 321              	.LVL19:
 322              	.L15:
 323              		.loc 1 82 16 view .LVU60
 324              	.LBE4:
 325              	.LBE5:
  83:main.c        ****       }
  84:main.c        ****    }
  85:main.c        **** 
  86:main.c        ****    if (errors == 0) {
 326              		.loc 1 86 4 is_stmt 1 view .LVU61
 327              		.loc 1 86 7 is_stmt 0 view .LVU62
 328 006c 002D     		cmp	r5, #0
 329 006e 03D1     		bne	.L13
  87:main.c        ****       printf("Data verification successful: All values match expected patterns.\n");
 330              		.loc 1 87 7 is_stmt 1 view .LVU63
 331 0070 0B48     		ldr	r0, .L16+28
 332 0072 FFF7FEFF 		bl	puts
 333              	.LVL20:
 334              	.L14:
  88:main.c        ****    } else {
  89:main.c        ****       printf("Data verification failed: %d errors found.\n", errors);
  90:main.c        ****    }
  91:main.c        **** 
  92:main.c        ****    while(1){
 335              		.loc 1 92 4 view .LVU64
  93:main.c        ****       ;//loop forever.
 336              		.loc 1 93 7 view .LVU65
  92:main.c        ****       ;//loop forever.
 337              		.loc 1 92 9 view .LVU66
 338 0076 FEE7     		b	.L14
 339              	.L13:
  89:main.c        ****    }
 340              		.loc 1 89 7 view .LVU67
ARM GAS  /tmp/ccPYuakx.s 			page 9


 341 0078 0A48     		ldr	r0, .L16+32
 342 007a 2900     		movs	r1, r5
 343 007c FFF7FEFF 		bl	printf
 344              	.LVL21:
 345 0080 F9E7     		b	.L14
 346              	.L17:
 347 0082 C046     		.align	2
 348              	.L16:
 349 0084 00000000 		.word	.LC0
 350 0088 1C000000 		.word	.LC2
 351 008c EFBEADDE 		.word	-559038737
 352 0090 38000000 		.word	.LC4
 353 0094 54000000 		.word	.LC6
 354 0098 EFBEAEDE 		.word	-558973201
 355 009c 70000000 		.word	.LC8
 356 00a0 A4000000 		.word	.LC10
 357 00a4 E8000000 		.word	.LC12
 358              		.cfi_endproc
 359              	.LFE9:
 361              		.text
 362              	.Letext0:
 363              		.file 2 "/home/kaylee/.arduino15/packages/STMicroelectronics/tools/xpack-arm-none-eabi-gcc/13.2.1-
 364              		.file 3 "/home/kaylee/.arduino15/packages/STMicroelectronics/tools/xpack-arm-none-eabi-gcc/13.2.1-
 365              		.file 4 "../handyarm.h"
 366              		.file 5 "/home/kaylee/.arduino15/packages/STMicroelectronics/tools/xpack-arm-none-eabi-gcc/13.2.1-
 367              		.file 6 "<built-in>"
ARM GAS  /tmp/ccPYuakx.s 			page 10


DEFINED SYMBOLS
                            *ABS*:00000000 main.c
     /tmp/ccPYuakx.s:19     .text.SystemInit:00000000 $t
     /tmp/ccPYuakx.s:25     .text.SystemInit:00000000 SystemInit
     /tmp/ccPYuakx.s:39     .text.flash_init:00000000 $t
     /tmp/ccPYuakx.s:45     .text.flash_init:00000000 flash_init
     /tmp/ccPYuakx.s:65     .text.flash_enable_write:00000000 $t
     /tmp/ccPYuakx.s:71     .text.flash_enable_write:00000000 flash_enable_write
     /tmp/ccPYuakx.s:91     .text.flash_disable_write:00000000 $t
     /tmp/ccPYuakx.s:97     .text.flash_disable_write:00000000 flash_disable_write
     /tmp/ccPYuakx.s:117    .text.flash_erase_page:00000000 $t
     /tmp/ccPYuakx.s:123    .text.flash_erase_page:00000000 flash_erase_page
     /tmp/ccPYuakx.s:143    .text.flash_write_word:00000000 $t
     /tmp/ccPYuakx.s:149    .text.flash_write_word:00000000 flash_write_word
     /tmp/ccPYuakx.s:172    .rodata.main.str1.4:00000000 $d
     /tmp/ccPYuakx.s:196    .text.main:00000000 $t
     /tmp/ccPYuakx.s:202    .text.main:00000000 main
     /tmp/ccPYuakx.s:349    .text.main:00000084 $d

UNDEFINED SYMBOLS
puts
printf
